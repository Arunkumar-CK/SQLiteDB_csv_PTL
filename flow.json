[
    {
        "id": "0da6ddbdcfa7458f",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3d78b677.5d2c8a",
        "type": "sqlitedb",
        "db": "C:\\Datalog\\database.db",
        "mode": "RWC"
    },
    {
        "id": "26eb42ad1aa1e1d4",
        "type": "ui_group",
        "name": "Audio Switch",
        "tab": "a53c82b00b63514e",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "a53c82b00b63514e",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "90f6a2e461324b7e",
        "type": "eth-ip endpoint",
        "address": "192.168.2.252",
        "slot": "0",
        "cycletime": "100",
        "name": "AB PLC",
        "vartable": {
            "": {
                "WMS_To_Plc_Msg.CommandType": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.FromX": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.FromY": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.FromZ": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.rRequestId": {
                    "type": ""
                },
                "WMS_To_Plc_Msg.ToX": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.ToY": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.ToZ": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.sRequestId": {
                    "type": ""
                },
                "WMS_To_Plc_Msg.BinId": {
                    "type": ""
                },
                "WMS_To_Plc_Msg.pRequestId": {
                    "type": ""
                },
                "WMS_To_Plc_Msg.SkuId": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.PickQty": {
                    "type": "DINT"
                },
                "Plc_To_WMS_Msg.rRequestId": {
                    "type": ""
                },
                "Plc_To_WMS_Msg.sRequestId": {
                    "type": ""
                },
                "Plc_To_WMS_Msg.pRequestId": {
                    "type": ""
                },
                "Plc_To_Gateway_Msg_Id": {
                    "type": "DINT"
                },
                "Gateway_To_Plc_Msg_Id": {
                    "type": "DINT"
                },
                "Gateway_To_Plc_rRequest_Id_Ack": {
                    "type": ""
                },
                "Gateway_To_Plc_sRequest_Id_Ack": {
                    "type": ""
                },
                "Gateway_To_Plc_pRequest_Id_Ack": {
                    "type": ""
                },
                "Bot1_Storage_Error": {
                    "type": "BOOL"
                },
                "Bot2_Storage_Error": {
                    "type": "BOOL"
                },
                "Machine_Reset_ON": {
                    "type": "BOOL"
                },
                "Enable_Task_Handling": {
                    "type": "BOOL"
                },
                "FlushFIFO_Data": {
                    "type": "BOOL"
                },
                "Cmnd_Startup": {
                    "type": "BOOL"
                },
                "StartUp_Sequence_Number": {
                    "type": "INT"
                },
                "Mover_ID[1].Mover_Running_Seq": {
                    "type": "DINT"
                },
                "Mover_ID[2].Mover_Running_Seq": {
                    "type": "DINT"
                },
                "Mover_ID[1].ForkBot.Input.Single_Left_Storage_Done": {
                    "type": "BOOL"
                },
                "Mover_ID[1].ForkBot.Input.Double_Left_Retrieval_Done": {
                    "type": "BOOL"
                },
                "Mover_ID[2].ForkBot.Input.Single_Left_Storage_Done": {
                    "type": "BOOL"
                },
                "Mover_ID[2].ForkBot.Input.Double_Left_Retrieval_Done": {
                    "type": "BOOL"
                },
                "GatewayMessageSequence_Number": {
                    "type": "INT"
                },
                "Enable_Queue": {
                    "type": "BOOL"
                }
            }
        }
    },
    {
        "id": "5fc4693ece699fdb",
        "type": "debug",
        "z": "0da6ddbdcfa7458f",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 800,
        "wires": []
    },
    {
        "id": "cdf8ec3f7099ad2d",
        "type": "sqlite",
        "z": "0da6ddbdcfa7458f",
        "mydb": "3d78b677.5d2c8a",
        "sqlquery": "fixed",
        "sql": "CREATE TABLE IF NOT EXISTS ptl (id INTEGER PRIMARY KEY, col1 TEXT, col2 TEXT, col3 TEXT);",
        "name": "create",
        "x": 370,
        "y": 800,
        "wires": [
            [
                "08f2b70f2836533a"
            ]
        ]
    },
    {
        "id": "4f39815261a8400f",
        "type": "inject",
        "z": "0da6ddbdcfa7458f",
        "name": "Generate and Inject Data",
        "props": [],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 160,
        "y": 800,
        "wires": [
            [
                "cdf8ec3f7099ad2d"
            ]
        ]
    },
    {
        "id": "08f2b70f2836533a",
        "type": "function",
        "z": "0da6ddbdcfa7458f",
        "name": "Prepare random data",
        "func": "var tableName = 'ptl';\nif (!flow.get('counter')) {\n    flow.set('counter', 0);\n}\n\nvar counter = flow.get('counter') + 1;\nflow.set('counter', counter);\n\nvar characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789012345678901234567890123456789012345678901234567890123456789';\nvar str5 = '', str1 = '', str2 = '', str3 = '', str4 = '', rrequest = '', srequest = '';\nvar binid ='BPTC02-37-0-1-3'\nfor (var i = 0; i < 8; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str1 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 4; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str2 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 4; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str3 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 4; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str4 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 12; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str5 += characters.charAt(randomIndex);\n}\nrrequest = str1 + '-' + str2 + '-' + str3 + '-' + str4 + '-' + str5;\n\nstr1 = str2 = str3 = str4 = str5=''\n\nfor (var i = 0; i < 8; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str1 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 4; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str2 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 4; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str3 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 4; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str4 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 12; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str5 += characters.charAt(randomIndex);\n}\nsrequest = str1 + '-' + str2 + '-' + str3 + '-' + str4 + '-' + str5;\n\n\nvar insertQuery = `INSERT INTO ${tableName} (id,col1,col2,col3) VALUES ('${counter}', '${binid}', '${rrequest}', '${srequest}')`;\n\nmsg.topic = insertQuery;\nmsg.payload=\"\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 800,
        "wires": [
            [
                "9e7a5c296c2392af"
            ]
        ]
    },
    {
        "id": "9e7a5c296c2392af",
        "type": "sqlite",
        "z": "0da6ddbdcfa7458f",
        "mydb": "3d78b677.5d2c8a",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Insert Database",
        "x": 760,
        "y": 800,
        "wires": [
            [
                "5fc4693ece699fdb"
            ]
        ]
    },
    {
        "id": "dabde30bcbd2a04b",
        "type": "sqlite",
        "z": "0da6ddbdcfa7458f",
        "mydb": "3d78b677.5d2c8a",
        "sqlquery": "fixed",
        "sql": "SELECT * FROM ptl",
        "name": "Read the data ",
        "x": 380,
        "y": 680,
        "wires": [
            [
                "686f91cc77689fbb"
            ]
        ]
    },
    {
        "id": "5e0dbd8dd8d91d77",
        "type": "inject",
        "z": "0da6ddbdcfa7458f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 680,
        "wires": [
            [
                "dabde30bcbd2a04b"
            ]
        ]
    },
    {
        "id": "686f91cc77689fbb",
        "type": "debug",
        "z": "0da6ddbdcfa7458f",
        "name": "debug 14",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 680,
        "wires": []
    },
    {
        "id": "aacdbacb7d4c80a2",
        "type": "sqlite",
        "z": "0da6ddbdcfa7458f",
        "mydb": "3d78b677.5d2c8a",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Read SQL Database",
        "x": 480,
        "y": 980,
        "wires": [
            [
                "6e2133802b2fc9f7"
            ]
        ]
    },
    {
        "id": "3d88957b6e830ddc",
        "type": "function",
        "z": "0da6ddbdcfa7458f",
        "name": "Set SQL Query",
        "func": "msg.topic = 'SELECT * FROM ptl LIMIT 1';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 265,
        "y": 980,
        "wires": [
            [
                "aacdbacb7d4c80a2"
            ]
        ]
    },
    {
        "id": "a35f6e948ce72953",
        "type": "inject",
        "z": "0da6ddbdcfa7458f",
        "name": "Trigger",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 95,
        "y": 980,
        "wires": [
            [
                "3d88957b6e830ddc"
            ]
        ]
    },
    {
        "id": "6e2133802b2fc9f7",
        "type": "csv",
        "z": "0da6ddbdcfa7458f",
        "name": "CSV",
        "sep": ",",
        "hdrin": false,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 670,
        "y": 980,
        "wires": [
            [
                "69f414ed8b74500c"
            ]
        ]
    },
    {
        "id": "69f414ed8b74500c",
        "type": "file",
        "z": "0da6ddbdcfa7458f",
        "name": "Write to CSV",
        "filename": "C:\\Datalog\\CSVfile.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 825,
        "y": 980,
        "wires": [
            [
                "80be837764525128"
            ]
        ]
    },
    {
        "id": "80be837764525128",
        "type": "function",
        "z": "0da6ddbdcfa7458f",
        "name": "Send Acknowledgement",
        "func": "msg.payload = \"Transfer completed. Row data has been transferred to the CSV file.\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 980,
        "wires": [
            [
                "9967f094d5ef8554"
            ]
        ]
    },
    {
        "id": "9967f094d5ef8554",
        "type": "debug",
        "z": "0da6ddbdcfa7458f",
        "name": "Acknowledgement",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 980,
        "wires": []
    }
]